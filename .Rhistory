#install package
install.packages("devtools")
library(devtools)
devtools::install_github("leonjessen/PepTools")
library(PepTools)
devtools::install_github("leonjessen/PepTools")
library(PepTools)
devtools::install_github("leonjessen/PepTools")
devtools::install_github("leonjessen/PepTools")
devtools::install_github("leonjessen/PepTools")
library(devtools)
devtools::install_github("leonjessen/PepTools")
devtools::install_github("leonjessen/PepTools")
install.packages("devtools")
devtools::install_github("leonjessen/PepTools")
install.packages("devtools")
devtools::install_github("leonjessen/PepTools")
devtools::install_github("leonjessen/PepTools")
library(devtools)
devtools::install_github("leonjessen/PepTools")
library(devtools)
devtools::install_github("leonjessen/PepTools")
devtools::install_github('rstudio/tensorflow')
invisible(utils::memory.limit(104000))
devtools::install_github('rstudio/tensorflow')
library(devtools)
remotes::install_github("leonjessen/PepTools")
remotes::install_github("leonjessen/PepTools", local = FALSE)
install.packages(c("BH", "brio", "bslib", "car", "cli", "clue", "conquer", "corrplot", "credentials", "crosstalk", "desc", "diffobj", "DT", "fda", "fs", "gert", "git2r", "glue", "httpuv", "igraph", "irlba", "ks", "Matrix", "mclust", "MCMCpack", "memoise", "mgcv", "misc3d", "mvtnorm", "nloptr", "openssl", "openxlsx", "pkgbuild", "pkgload", "pracma", "R.utils", "rbibutils", "rcmdcheck", "RcppArmadillo", "Rdpack", "remotes", "rex", "rgl", "rio", "rlang", "sessioninfo", "shiny", "sp", "testthat", "usethis"))
install.packages(c("Matrix", "mgcv"), lib="C:/R/R-4.1.1/library")
install.packages(c("BH", "brio", "bslib", "car", "cli", "clue", "conquer", "corrplot", "credentials", "crosstalk", "desc", "diffobj", "DT", "fda", "fs", "gert", "git2r", "glue", "httpuv", "igraph", "irlba", "ks", "Matrix", "mclust", "MCMCpack", "memoise", "mgcv", "misc3d", "mvtnorm", "nloptr", "openssl", "openxlsx", "pkgbuild", "pkgload", "pracma", "R.utils", "rbibutils", "rcmdcheck", "RcppArmadillo", "Rdpack", "remotes", "rex", "rgl", "rio", "rlang", "sessioninfo", "shiny", "sp", "testthat", "usethis"))
install.packages(c("BH", "brio", "bslib", "car", "cli", "clue", "conquer", "corrplot", "credentials", "crosstalk", "desc", "diffobj", "DT", "fda", "fs", "gert", "git2r", "glue", "httpuv", "igraph", "irlba", "ks", "Matrix", "mclust", "MCMCpack", "memoise", "mgcv", "misc3d", "mvtnorm", "nloptr", "openssl", "openxlsx", "pkgbuild", "pkgload", "pracma", "R.utils", "rbibutils", "rcmdcheck", "RcppArmadillo", "Rdpack", "remotes", "rex", "rgl", "rio", "rlang", "sessioninfo", "shiny", "sp", "testthat", "usethis"))
file.edit(file.path("~", ".Rprofile"))
remotes::install_github("leonjessen/PepTools", local = FALSE)
install.packages("remotes")
install.packages("remotes")
remotes::install_github("leonjessen/PepTools")
library(remotes)
remotes::install_github("leonjessen/PepTools", dependencies = TRUE)
devtools::install_github("DanChaltiel/crosstable", build_vignettes=TRUE)
remotes::install_github("leonjessen/PepTools", build_vignettes = TRUE)
remotes::install_github("leonjessen/PepTools", INSTALL_opts=c("--no-multiarch"))
library(PepTools)
#d2
devtools::install_github("omarwagih/ggseqlogo")
#d2
devtools::install_github("omarwagih/ggseqlogo")
#d2
remotes::install_github("omarwagih/ggseqlogo",INSTALL_opts=c("--no-multiarch"))
library(keras)
install.packages('png')
library(keras)
install.packages('base64enc')
library(keras)
library(tidyverse)
library(janitor)
set.seed(1458)
## Function to tidy iedb peptide data
## Takes in file_path to csv file and MHC I allotype name label and number
tidy_peptides <- function(file_path,allotype,allotype_num) {
tidy_dat <- read_csv(file_path, skip = 1, col_types = cols()) %>%
# Filter peptide rows
filter(!str_detect(Description,"[lX]") &
`Object Type` == "Linear peptide") %>%
# Add new variables
mutate(length = str_count(Description), # Add length
label_chr = allotype, # Label allotype
label_num = allotype_num, # Add integer for allotype
# Remove any extras strings
peptide = str_replace_all(Description,"\\(.*?\\)", "")) %>%
# Filter only 9mers
filter(length == 9 ) %>%
# Keep only the peptide and labels
select(peptide, label_chr, label_num)
return(tidy_dat)
}
PEPTIDES
PEPTIDES %>% head(10)
PEPTIDES %>% pssm_counts %>% .[1:9,1:10]
PEPTIDES %>% pssm_freqs %>% pssm_bits %>% .[1:9,1:10]
PEPTIDES %>% pssm_freqs %>% pssm_bits %>% t %>% ggseqlogo(method="custom")
PEPTIDES %>% pep_encode %>% dim
PEPTIDES %>% pep_plot_images
devtools::install_github("jtextor/epitope-prediction")
remotess::install_github("jtextor/epitope-prediction",INSTALL_opts=c("--no-multiarch"))
remotes::install_github("jtextor/epitope-prediction",INSTALL_opts=c("--no-multiarch"))
library(devtools)
devtools::install_github("masato-ogishi/Repitope")
library(remotes)
remotes::install_github("masato-ogishi/Repitope")
#Note (install with this one)
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
install.packages("Biostring")
install.packages("biostrings")
install.packages("Biostrings")
install.packages("msa")
install.packages("BioStrings")
remotes::install_github("BioStrings")
remotes::install_github("BioStrings")
install.packages("BiocManager")
BiocManager::install("Biostrings")
BiocManager::install("Biostrings")
library(BioString)
library(BiocManager)
BiocManager::install("Biostrings")
BiocManager::install("Biostrings", force=TRUE)
#Note (install with this one)
#modification from its resources
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
BiocManager::install("msa", force=TRUE)
#modification from its resources
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
install.packages('bitops')
#modification from its resources
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
install.packages("IRanges")
BiocManager::install("IRanges", force=TRUE)
#modification from its resources
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
BiocManager::install("GenomeInfoDbData", force=TRUE)
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages(c("cli", "rlang"))
install.packages("BiocManager")
devtools::install_github("masato-ogishi/Repitope")
install.packages("cli")
library(cli)
remove.packages("cli", lib="~/R/win-library/4.1")
install.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::install_github("masato-ogishi/Repitope")
library(msa)
library(GenomeInfoDb)
BiocManager::install("Biostrings", force=TRUE)
BiocManager::install("msa", force=TRUE)
BiocManager::install("IRanges", force=TRUE)
BiocManager::install("GenomeInfoDbData", force=TRUE)
BiocManager::install("GenomeInfoDbData", force=TRUE, dependecies = TRUE)
BiocManager::install("GenomeInfoDbData", dependecies = TRUE)
invisible(utils::memory.limit(size = 160000))
invisible(utils::memory.limit(size = 240000))
library(PepTools)
library(keras)
library(tidyverse)
library(janitor)
## Function to tidy iedb peptide data
## Takes in file_path to csv file and MHC I allotype name label and number
tidy_peptides <- function(file_path,allotype,allotype_num) {
tidy_dat <- read_csv(file_path, skip = 1, col_types = cols()) %>%
# Filter peptide rows
filter(!str_detect(Description,"[lX]") &
`Object Type` == "Linear peptide") %>%
# Add new variables
mutate(length = str_count(Description), # Add length
label_chr = allotype, # Label allotype
label_num = allotype_num, # Add integer for allotype
# Remove any extras strings
peptide = str_replace_all(Description,"\\(.*?\\)", "")) %>%
# Filter only 9mers
filter(length == 9 ) %>%
# Keep only the peptide and labels
select(peptide, label_chr, label_num)
return(tidy_dat)
}
PEPTIDES %>% head(10)
PEPTIDES %>% pssm_freqs %>% .[1:9,1:10]
PEPTIDES %>% pssm_freqs %>% pssm_bits %>% .[1:9,1:10]
PEPTIDES %>% pssm_freqs %>% pssm_bits %>% t %>% ggseqlogo(method="custom")
PEPTIDES %>% pep_encode %>% dim
PEPTIDES %>% pep_encode %>% dim
PEPTIDES %>% pep_plot_images
devtools::install_github("masato-ogishi/Repitope", force=T)
#Note (install with this one)
remotes::install_github("masato-ogishi/plotUtility", INSTALL_opts=c("--no-multiarch"))
#Note (install with this one)
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
devtools::install_github("masato-ogishi/Repitope", force=T)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Biostrings")
BiocManager::install("msa")
BiocManager::install("S4Vectors")
BiocManager::install("GenomeInfoDbData")
devtools::install_github("masato-ogishi/Repitope", force=T)
install.packages("peptide")
install.packages("peptides")
install.packages("Peptides")
library(devtools)
devtools::install_github("heike/peptider")
library(remotes)
remotes::install_github("heike/peptider")
install.packages('plyr')
remotes::install_github("heike/peptider")
remotes::install_github("heike/peptider")
#Note (install with this one)
remotes::install_github("masato-ogishi/Repitope", INSTALL_opts=c("--no-multiarch"))
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Biostrings")
devtools::install_github("masato-ogishi/Repitope", force=T)
BiocManager::install("GenomeInfoDbData")
ndevtools::install_github("masato-ogishi/Repitope", force=T)
devtools::install_github("masato-ogishi/Repitope", force=T)
devtools::install_github("masato-ogishi/Repitope", force=T)
install.packages('reshape"')
install.packages('reshape2"')
install.packages('reshape2")
")"
install.packages('reshape2')
devtools::install_github("masato-ogishi/Repitope", force=T)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Biostrings")
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Biostrings")
library(Biostrings)
devtools::install_github("masato-ogishi/Repitope", force=T)
install.packages("tmvnsim")
devtools::install_github("masato-ogishi/Repitope", force=T)
install.packages("mnotmy")
install.packages("mnotmt")
install.packages("mnormt")
devtools::install_github("masato-ogishi/Repitope", force=T)
library(Repitope)
devtools::install_github("heike/peptider")
library(keras)
library(tidyverse)
library(PepTools)
library(janitor)
library(janitor)
set.seed(1458)
remotes::install_github("jtextor/epitope-prediction",INSTALL_opts=c("--no-multiarch"))
tidy_dat <- read_csv(file_path, skip = 1, col_types = cols()) %>%
# Filter peptide rows
filter(!str_detect(Description,"[lX]") &
`Object Type` == "Linear peptide") %>%
# Add new variables
mutate(length = str_count(Description), # Add length
label_chr = allotype, # Label allotype
label_num = allotype_num, # Add integer for allotype
# Remove any extras strings
peptide = str_replace_all(Description,"\\(.*?\\)", "")) %>%
# Filter only 9mers
filter(length == 9 ) %>%
# Keep only the peptide and labels
select(peptide, label_chr, label_num)
## Function to tidy iedb peptide data
## Takes in file_path to csv file and MHC I allotype name label and number
tidy_peptides <- function(file_path,allotype,allotype_num) {
tidy_dat <- read_csv(file_path, skip = 1, col_types = cols()) %>%
# Filter peptide rows
filter(!str_detect(Description,"[lX]") &
`Object Type` == "Linear peptide") %>%
# Add new variables
mutate(length = str_count(Description), # Add length
label_chr = allotype, # Label allotype
label_num = allotype_num, # Add integer for allotype
# Remove any extras strings
peptide = str_replace_all(Description,"\\(.*?\\)", "")) %>%
# Filter only 9mers
filter(length == 9 ) %>%
# Keep only the peptide and labels
select(peptide, label_chr, label_num)
return(tidy_dat)
}
PEPTIDES %>% head(10)
PEPTIDES %>% pssm_freqs %>% .[1:9,1:10]
#Note (install with this one)
install.packages("remotes")
options(java.parameters="-Xmx60G")  ## allow JAVA to use large memory space
library(tidyverse)
library(data.table)
library(Repitope)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
install.packages("bit")
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
install.packages("Epitope.import")
library(Repitope)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
install.packages(lib)
install.package("zoo")
install.packages("zoo")
install.packages("zoo")
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
Sys.which("make")
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
library.dynam(chname, package, lib.loc,
verbose = getOption("verbose"),
file.ext = .Platform$dynlib.ext, …)
library.dynam.unload(chname, libpath,
verbose = getOption("verbose"),
file.ext = .Platform$dynlib.ext)
library.dynam(chname, package, lib.loc,
verbose = getOption("verbose"),
file.ext = .Platform$dynlib.ext, …)
library.dynam.unload(chname, libpath,
verbose = getOption("verbose"),
file.ext = .Platform$dynlib.ext)
.dynLibs(new)
MHCI_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCI_Human.csv.gz", package="Repitope"),
OtherFileNames=list(
system.file("Calis1.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Calis2.csv", package="Repitope"),    ## Supplementary dataset from Calis et al., 2013.
system.file("Chowell.csv", package="Repitope"),   ## Supplementary dataset from Chowell et al., 2015.
system.file("EPIMHC.csv", package="Repitope"),    ## ClassI, Human, Annotated with T-cell activity
system.file("HCV.csv", package="Repitope"),       ## LANL HCV epitope dataset.
system.file("HIV.csv", package="Repitope"),       ## LANL HIV epitope dataset. ("best-defined")
system.file("IMMA2.csv", package="Repitope"),     ## POPISK paper (Tung et al., 2011.), http://140.113.239.45/POPISK/download.php
system.file("MHCBN.csv", package="Repitope"),     ## ClassI, Human, Annotated with T-cell activity
system.file("TANTIGEN.csv", package="Repitope")   ## TANTIGEN T cell epitope dataset; entries annotated by in vitro or in vivo experiments are retained (but not MS experiments)
),
peptideLengthSet=8:11
)
MHCII_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCII_Human.csv.gz", package="Repitope"),
peptideLengthSet=11:30
)
MHCII_Human <- Epitope_Import(
system.file("IEDB_Assay_MHCII_Human.csv.gz", package="Repitope"),
peptideLengthSet=11:30
)
library(Repitope)
library(data.table)
library(tidyverse)
install.packages("tidyverse")
install.packages("closure")
install.packages("tidyverse")
library(ggplot2)
if(!require(devtools)) install.packages("devtools")
devtools::install_github("masato-ogishi/Repitope")
library(devtools)
install_github('msuprun/bbeaR')
library(ggplot2)
library(devtools)
